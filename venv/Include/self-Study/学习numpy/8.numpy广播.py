#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2019/8/17 0017 15:19
# @Author  : joker-syc
# @Site    : 
# @File    : 8.numpy广播.py
# @Software: PyCharm

import numpy as np
#
# a = np.array([1, 2, 3, 4])
# b = np.array([10, 20, 30, 40])
# c = a * b                   #当且仅当两个数组 a 和 b 形状相同，即满足 a.shape == b.shape，那么 a*b 的结果就是 a 与 b 数组对应位相乘
# print(c)
#
# #当运算中的 2 个数组的形状不同时，numpy 将自动触发广播机制
#
# # a = np.array([[ 0, 0, 0],
# #               [10,10,10],
# #               [20,20,20],
# #               [30,30]])         #说明非等长数组是不能参与运算的,也无法触发广播机制
# a = np.array([[ 0, 0, 0],
#               [10,10,10],
#               [20,20,20],
#               [30,30,40]])
# b = np.array([1,2,3])
# print(a + b)

'''
广播的规则:
让所有输入数组都向其中形状最长的数组看齐，形状中不足的部分都通过在前面加 1 补齐。
输出数组的形状是输入数组形状的各个维度上的最大值。
如果输入数组的某个维度和输出数组的对应维度的长度相同或者其长度为 1 时，这个数组能够用来计算，否则出错。
当输入数组的某个维度的长度为 1 时，沿着此维度运算时都用此维度上的第一组值。

简单理解：对两个数组，分别比较他们的每一个维度（若其中一个数组没有当前维度则忽略），满足：
数组拥有相同形状。
当前维度的值相等。
当前维度的值有一个是 1。

若条件不满足，抛出 "ValueError: frames are not aligned" 异常。
'''