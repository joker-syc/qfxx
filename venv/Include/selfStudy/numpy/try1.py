#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2019/7/27 0027 17:07
# @Author  : joker-syc
# @Site    : 
# @File    : try1.py
# @Software: PyCharm

import numpy as np

# a=np.array(
#     (
#            (1,23,3,43,3,34,(1,2,33,3,23,2,32,3,232,32,32,3,2)),
#            (1,23,3,43,3,34,(1,2,33,3,23,2,32,3,232,32,32,3,2)),
#            (1,23,3,43,3,34,(1,2,33,3,23,2,32,3,232,32,32,3,2)),
#            (1,23,3,43,3,34,(1,2,33,3,23,2,32,3,232,32,32,3,2)),
#     )
#             )   #这样输入的数学意义是矢量,就是用元组输入(如果输入的元组的元素的数目不一致,就会报错)
# print(a)
# print(len(a))   #有7个元素
# print(a[0])
# print(a.shape[0])  #这个相当于len()函数,统计数组中的一维元素数目
# print(a.shape[1])  #统计数组中2维数组的元素数目
# # print(a.shape[2])  #这个会报错
#
# a=np.array([
#             [1,3,4,4,4,5,5,6,6],
#             [2,33,3,4,34,34,34,3433,4,34,3,4],
#             [2,2,32,32,32,32,32,23,23,2],
#             [2,3,2,32,3,23,3,3,[1,12,2,23,3,3,]]
#             ])
# #错误记录:多维数组千万不要少了外维的中括号
# print(a)
# print(len(a))
# print(a.shape)            #这个返回的是一个元组(好像与输入是元组的不太一样)
# print(a[0][0])
# print(a.size)             #相当于
# # print(a.shape[0])       #作用是与len()相同
# # print(a.shape[1])       #这个会报错,不知道啥原因

# a=np.array([
#             [1,3,4,4,4,5,5,6,6],
#             [1,3,4,4,4,5,5,6,6],
#             [1,3,4,4,4,5,5,6,6],
#             [1,3,4,4,4,5,5,6,[1,2]]
#            ])
#如果已经预先设置限定存储的类型,一级数组中出现了类型不一致的情况时,会在创建ndarray对象时报错
# print(a)
# print(len(a))
# print(a.shape)          #看来必须是非等长数组才能
# print(a[0][0])
# print(a.size)
# print(a.itemsize)     #数组中每个元素的大小 以字节为单位
# print(a.ndim)         #数组的维度
# print(a.flags)

# import time
# while 1:
#     time.sleep(1)
#     a=np.empty([3,3])     #此方法创建的是一个未初始化数组    里面的数据在未初始化之前是随机的
#     print(a)
#     print(id(a))

# a=[[1,2,3],
#    [4,5,6],
#    [7,8,9]]
# print(a)
# print(type(a))
# print(id(a))
#很明显,两个a根本不是一个a,可以得出结论,empty创建的数组是无法重新赋值的
